services:
  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - coolify
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=suna
      - RABBITMQ_DEFAULT_PASS=sunapassword
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - coolify
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - ENV_MODE=local
      - HOST=0.0.0.0
      - PORT=8000
      
      # CRITICAL CORS CONFIGURATION
      - CORS_ORIGINS=*
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH
      - CORS_ALLOW_HEADERS=*
      - CORS_EXPOSE_HEADERS=*
      - CORS_MAX_AGE=86400
      
      # URLs
      - FRONTEND_URL=https://suna.hossamdev.net
      - BACKEND_URL=https://sunaback.hossamdev.net
      
      # Supabase Configuration
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      
      # Redis & RabbitMQ - Use service names for internal communication
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_SSL=false
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      
      # LLM API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - MODEL_TO_USE=${MODEL_TO_USE}
      
      # Search & Scraping APIs
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
      - FIRECRAWL_URL=${FIRECRAWL_URL}
      
      # Optional APIs
      - RAPID_API_KEY=${RAPID_API_KEY}
      - SMITHERY_API_KEY=${SMITHERY_API_KEY}
      
      # QStash Configuration
      - QSTASH_URL=https://qstash.upstash.io
      - QSTASH_TOKEN=${QSTASH_TOKEN}
      - QSTASH_CURRENT_SIGNING_KEY=${QSTASH_CURRENT_SIGNING_KEY}
      - QSTASH_NEXT_SIGNING_KEY=${QSTASH_NEXT_SIGNING_KEY}
      
      # Slack Configuration
      - SLACK_CLIENT_ID=${SLACK_CLIENT_ID}
      - SLACK_CLIENT_SECRET=${SLACK_CLIENT_SECRET}
      - SLACK_REDIRECT_URI=https://sunaback.hossamdev.net/api/integrations/slack/callback
      
      # Webhook Configuration
      - WEBHOOK_BASE_URL=https://sunaback.hossamdev.net
      
      # MCP Configuration
      - MCP_CREDENTIAL_ENCRYPTION_KEY=${MCP_CREDENTIAL_ENCRYPTION_KEY}
      
      # Pipedream Configuration
      - PIPEDREAM_PROJECT_ID=${PIPEDREAM_PROJECT_ID}
      - PIPEDREAM_CLIENT_ID=${PIPEDREAM_CLIENT_ID}
      - PIPEDREAM_CLIENT_SECRET=${PIPEDREAM_CLIENT_SECRET}
      - PIPEDREAM_X_PD_ENVIRONMENT=${PIPEDREAM_X_PD_ENVIRONMENT}
      
      # Daytona Configuration
      - DAYTONA_API_KEY=${DAYTONA_API_KEY}
      - DAYTONA_SERVER_URL=https://app.daytona.io/api
      - DAYTONA_TARGET=us
      
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    networks:
      - coolify
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - ENV_MODE=local
      
      # Supabase Configuration
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      
      # Redis & RabbitMQ - Use service names for internal communication
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_SSL=false
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      
      # LLM API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - MODEL_TO_USE=${MODEL_TO_USE}
      
      # Search & Scraping APIs
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
      - FIRECRAWL_URL=${FIRECRAWL_URL}
      
      # Optional APIs
      - RAPID_API_KEY=${RAPID_API_KEY}
      - SMITHERY_API_KEY=${SMITHERY_API_KEY}
      
      # QStash Configuration
      - QSTASH_URL=https://qstash.upstash.io
      - QSTASH_TOKEN=${QSTASH_TOKEN}
      - QSTASH_CURRENT_SIGNING_KEY=${QSTASH_CURRENT_SIGNING_KEY}
      - QSTASH_NEXT_SIGNING_KEY=${QSTASH_NEXT_SIGNING_KEY}
      
      # Webhook Configuration
      - WEBHOOK_BASE_URL=https://sunaback.hossamdev.net
      
      # MCP Configuration
      - MCP_CREDENTIAL_ENCRYPTION_KEY=${MCP_CREDENTIAL_ENCRYPTION_KEY}
      
      # Daytona Configuration
      - DAYTONA_API_KEY=${DAYTONA_API_KEY}
      - DAYTONA_SERVER_URL=https://app.daytona.io/api
      - DAYTONA_TARGET=us
      
    command: ["uv", "run", "dramatiq", "run_agent_background"]
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - coolify
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 256M

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_SUPABASE_URL=${SUPABASE_URL}
        - NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
        - NEXT_PUBLIC_BACKEND_URL=https://sunaback.hossamdev.net/api
        - NEXT_PUBLIC_URL=https://suna.hossamdev.net
        - NEXT_PUBLIC_ENV_MODE=LOCAL
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SUPABASE_URL=${SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_BACKEND_URL=https://sunaback.hossamdev.net/api
      - NEXT_PUBLIC_URL=https://suna.hossamdev.net
      - NEXT_PUBLIC_ENV_MODE=LOCAL
      
    depends_on:
      - backend
    networks:
      - coolify
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 256M

networks:
  coolify:
    external: true

volumes:
  redis-data:
  rabbitmq-data: